# URL
# RFC 3986 URI Generic Syntax



URI                    <- scheme ":" hier_part ("?" query )? ("#" fragment)?

hier_part              <- "//" authority path_abempty
                        / path_absolute
                        / path_rootless
                        / path_empty

URI-reference          <- URI / relative_ref

absolute-URI           <- scheme ":" hier_part ("?" query)?

relative_ref           <- relative_part ("?" query)? ("#" fragment)?

relative_part          <- "//" authority path_abempty
                        / path_absolute
                        / path_noscheme
                        / path_empty

scheme                 <- ALPHA ( ALPHA / DIGIT / "+" / "-" / "." )*

authority              <- (userinfo "@")? host (":" port)?
userinfo               <- (unreserved / pct_encoded / sub_delims / ":")*
host                   <- IP_literal / IPv4address / reg_name
port                   <- *DIGIT

IP_literal             <- "[" ( IPv6address / IPvFuture  ) "]"

IPvFuture              <- "v" 1*HEXDIG "." (unreserved / sub_delims / ":")+

IPv6address            <-  h16 ":" h16 ":" h16 ":" h16 ":" h16 ":" h16 ":" ls32
                        / "::" h16 ":" h16 ":" h16 ":" h16 ":" h16 ":" ls32
                        / h16? "::" h16 ":" h16 ":" h16 ":" h16 ":" ls32

                        / (*1( h16 ":" ) h16)? "::" 3( h16 ":" ) ls32

                        / [ *2( h16 ":" ) h16 ] "::" h16 ":" h16 ':' ls32
                        / [ *3( h16 ":" ) h16 ] "::" h16 ":" ls32
                        / [ *4( h16 ":" ) h16 ] "::" ls32
                        / [ *5( h16 ":" ) h16 ] "::" h16
                        / [ *6( h16 ":" ) h16 ] "::"

h16                    <- 1*4HEXDIG
ls32                   <- ( h16 ":" h16 ) / IPv4address
IPv4address            <- dec_octet "." dec_octet "." dec_octet "." dec_octet

dec_octet              <- DIGIT                 ; 0-9
                        / %x31-39 DIGIT         ; 10-99
                        / "1" 2DIGIT            ; 100-199
                        / "2" %x30-34 DIGIT     ; 200-249
                        / "25" %x30-35          ; 250-255

reg_name               <- *( unreserved / pct_encoded / sub_delims )

path                   <- path_abempty    ; begins with "/" or is empty
                        / path_absolute   ; begins with "/" but not "//"
                        / path_noscheme   ; begins with a non-colon segment
                        / path_rootless   ; begins with a segment
                        / path_empty      ; zero characters

path_abempty           <- *( "/" segment )
path_absolute          <- "/" [ segment_nz *( "/" segment ) ]
path_noscheme          <- segment_nz-nc *( "/" segment )
path_rootless          <- segment_nz *( "/" segment )
path_empty             <- 0<pchar>

segment                <- *pchar
segment_nz             <- 1*pchar
segment_nz-nc          <- 1*( unreserved / pct_encoded / sub_delims / "@" )
                         ; non-zero-length segment without any colon ":"

pchar                  <- unreserved / pct_encoded / sub_delims / ":" / "@"

query                  <- *( pchar / "/" / "?" )

fragment               <- *( pchar / "/" / "?" )

pct_encoded            <- "%" HEXDIG HEXDIG

unreserved             <- ALPHA / DIGIT / "-" / "." / "_" / "~"
reserved               <- gen_delims / sub_delims
gen_delims             <- ":" / "/" / "?" / "#" / "[" / "]" / "@"
sub_delims             <- "!" / "$" / "&" / "'" / "(" / ")"
                        / "*" / "+" / "," / ";" / "="

