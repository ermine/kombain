# ABNF
# RFC 2234 ABNF for Syntax Specifications

rulelist        <- 1*( rule / (*c_wsp c_nl) )

rule            <- rulename defined_as elements c_nl
                 ; continues if next line starts
                 ;  with white space

rulename        <- ALPHA (ALPHA / DIGIT / "-")*

defined_as      <- c_wsp* ("=" / "=/") c_wsp*
                 ; basic rules definition and
                 ;  incremental alternatives

elements        <- alternation c_wsp*

c_wsp           <- WSP / (c_nl WSP)

c_nl            <- comment / CRLF
                 ; comment or newline

comment         <- ";" (WSP / VCHAR)* CRLF

alternation     <- concatenation
                 (c_wsp* "/" c_wsp* concatenation)*

concatenation   <- repetition (c_wsp+ repetition)*

repetition      <- repeat? element

repeat          <- DIGIT+ / (DIGIT* "*" DIGIT*)

element         <- rulename / group / option
                 / char_val / num_val / prose_val

group           <- "(" c_wsp* alternation c_wsp* ")"

option          <- "[" c_wsp* alternation c_wsp* "]"

char_val        <- DQUOTE (%x20-21 / %x23-7E)* DQUOTE
                   ; quoted string of SP and VCHAR without DQUOTE

num_val         <- "%" (bin_val / dec_val / hex_val)

bin_val         <- "b" BIT+ ( ("." BIT+)+ / ("-" BIT+) )?
                   ; series of concatenated bit values
                   ; or single ONEOF range

dec_val         <- "d" DIGIT+ ( ("." DIGIT+)+ / ("-" DIGIT+) )?

hex_val         <- "x" HEXDIG+ ( ("." HEXDIG+)+ / ("-" HEXDIG+) )?

prose_val       <- "<" (%x20-3D / %x3F-7E)* ">"
                   ; bracketed string of SP and VCHAR without angles
                   ; prose description, to be used as last resort

# Core Rules

ALPHA           <- [a-zA-Z]  
                   # %x41-5A / %x61-7A   ; A-Z / a-z

BIT             <- "0" / "1"

CHAR            <- [\x01-\x7F]
                # %x01-7F ; any 7-bit US-ASCII character, excluding NUL

CR              <- '\x0D'
                   # %x0D ; carriage return

CRLF            <- CR LF
                   # Internet standard newline

CTL             <- [\x00-\x1F]
                   # %x00-1F / %x7F ; controls

DIGIT           <- [\x30-\x39]
                   # %x30-39 ; 0-9

DQUOTE          <- '\x22
                   # %x22 ; " (Double Quote)

HEXDIG          <- DIGIT / "A" / "B" / "C" / "D" / "E" / "F"

HTAB           <- '\x09'
                  # %x09 ; horizontal tab

LF             <- '\x0A'
                  # %x0A ; linefeed

LWSP           <- (WSP / CRLF WSP)*
                   # linear white space (past newline)

OCTET          <- [\x00-\xFF] 
                  # %x00-FF ; 8 bits of data

SP             <- '\x20'
                  # %x20 ; space

VCHAR          <- [\x21-\x2F]
                  # %x21-7E ; visible (printing) characters

WSP            <- SP / HTAB
                  # white space

