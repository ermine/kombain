# bBCode PEG Grammar based on https://github.com/AlainODea/mod_experimental

%{
open Kmb_lib
%}

doc <- startList (block / inline)*

inline <- style / url / urlTag / img / .
block <- quote / code / list / table

style <- strong / em / underline / strike / color / size

strong <- strongStart (!strongEnd inline)+ strongEnd
strongStart <- "[b]" / "[B]"
strongEnd <- "[/b]" / "[/B]"

em <- emStart (!emEnd inline)+ emEnd
emStart <- "[i]" / "[I]"
emEnd <- "[/i]" / "[/I]"

underline <- underlineStart (!underlineEnd inline)+ underlineEnd
underlineStart <- "[u]" / "[U]"
underlineEnd <- "[/u]" / "[/U]"

strike <- strikeStart (!strikeEnd inline)+ strikeEnd
strikeStart <- "[s]" / "[S]"
strikeEnd <- "[/s]" / "[/S]"

url <- urlStart (!urlEnd inline)+ urlEnd
urlStart <- "[" ("u" / "U") ("r" / "R") ("l" / "L") "]"
urlEnd <- "[/" ("u" / "U") ("r" / "R") ("l" / "L") "]"

urlTag <- urlTagStart (!"]" .)* "]" (!urlEnd inline)* urlEnd
urlTagStart <- "[" ("u" / "U") ("r" / "R") ("l" / "L") "="

color <- colorStart colorValue "]" (!colorEnd inline)* colorEnd
colorStart <- "[" ("c" / "C") ("o" / "O") ("l" / "L")  ("o" / "O") ("r" / "R") "="
colorEnd <- "[/" ("c" / "C") ("o" / "O") ("l" / "L")  ("o" / "O") ("r" / "R") "]"
colorValue <- "#"? (!"]" .)+

size <- sizeStart sizeValue "]" (!sizeEnd inline)* sizeEnd
sizeStart <- "[" ("s" / "S") ("i" / "I") ("z" / "Z")  ("e" / "E") "="
sizeEnd <- "[/" ("s" / "S") ("i" / "I") ("z" / "Z")  ("e" / "E") "]"
sizeValue <- (!"]" .)+

img <- imgStart (!imgEnd inline)+ imgEnd
imgStart <- "[" ("i" / "I") ("m" / "M") ("g" / "G") "]"
imgEnd <- "[/" ("i" / "I") ("m" / "M") ("g" / "G") "]"

code <- codeStart (!codeEnd .)+ codeEnd
codeStart <- "[" ("c" / "C") ("o" / "O") ("d" / "D") ("e" / "E") "]"
codeEnd <- "[/" ("c" / "C") ("o" / "O") ("d" / "D") ("e" / "E") "]"

quote <- quoteStart (!quoteEnd inline)+ quoteEnd
quoteStart <- "[" ("q" / "Q") ("u" / "U") ("o" / "O") ("t" / "T") ("e" / "E") "]"
quoteEnd <- "[/" ("q" / "Q") ("u" / "U") ("o" / "O") ("t" / "T") ("e" / "E") "]"

list <- listStart listItems listEnd
listStart <- "[" ("l" / "L") ("i" / "I") ("s" / "S") ("t" / "T") "]"
listEnd <- "[/" ("l" / "L") ("i" / "I") ("s" / "S") ("t" / "T") "]"
listItems <- (listItem / newLine)*
listItem <- "[*]" (!("[*]" / listEnd) inline)*

table <- tableStart tableRows tableEnd
tableStart <- "[" ("t" / "T") ("a" / "A") ("b" / "B") ("l" / "L") ("e" / "E") "]"
tableEnd <- "[/" ("t" / "T") ("a" / "A") ("b" / "B") ("l" / "L") ("e" / "E") "]"

tableRows <- tableHeader? tableRow*

tableHeader <- tableHeaderStart (!tableHeaderEnd tableRow)* tableHeaderEnd
tableHeaderStart <- "[" ("t" / "T") ("h" / "H") ("e" / "E") ("a" / "A") ("d" / "D") "]"
tableHeaderEnd <- "[/" ("t" / "T") ("h" / "H") ("e" / "E") ("a" / "A") ("d" / "D") "]"

tableRow <- tableRowStart tableRowCells tableRowEnd
tableRowStart <- "[" ("t" / "T") ("r" / "R") "]"
tableRowEnd <- "[/" ("t" / "T") ("r" / "R") "]"

tableRowCells <- tableCell*
tableCell <- tableCellRegular / tableCellHeader

tableCellRegular <- tableCellRegularStart (!tableCellRegularEnd tableCellContents)* tableCellRegularEnd
tableCellRegularStart <- "[" ("t" / "T") ("d" / "D") "]"
tableCellRegularEnd <- "[/" ("t" / "T") ("d" / "D") "]"

tableCellHeader <- tableCellHeaderStart (!tableCellHeaderEnd tableCellContents)* tableCellHeaderEnd
tableCellHeaderStart <- "[" ("t" / "T") ("h" / "H") "]"
tableCellHeaderEnd <- "[/" ("t" / "T") ("h" / "H") "]"

tableCellContents <- quote / list / code / inline / .

newLine <- "\n" / "\r" "\n"?

startList <- &.

